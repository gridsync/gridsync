[project]
name = "gridsync"
description = "Synchronize local directories with Tahoe-LAFS storage grids"
keywords = [
    "gridsync",
    "tahoe-lafs",
    "tahoe",
    "lafs",
    "allmydata-tahoe",
    "magic-folder",
    "magic-wormhole",
]
readme = "README.rst"
authors = [
    { name = "Christopher R. Wood", email = "chris@gridsync.io" },
]
license = { file = "LICENSE" }
requires-python = ">=3.10, <3.12"
dynamic = ["version"]
dependencies = [
    "atomicwrites",
    "attrs",
    # These autobahn constraints are inherited from ZKAPAuthorizer e1debb6
    # and can probably go away once autobahn provides a release containing
    # https://github.com/crossbario/autobahn-python/pull/1578
    "autobahn >= 21.11.1, != 22.5.1, != 22.4.2, != 22.4.1",
    "certifi",
    'distro ; sys_platform != "darwin" and sys_platform != "win32"',
    "filelock",
    "humanize",
    "magic-wormhole",
    "psutil",
    "PyNaCl >= 1.2.0",  # 1.2.0 adds Argon2id KDF
    "pyyaml",
    "qtpy",
    "segno",
    "tahoe-capabilities",
    "treq",
    "twisted[tls] >= 21.7.0",  # 21.7.0 adds Deferred type hinting/annotations
    "txdbus ; sys_platform != 'darwin' and sys_platform != 'win32'",
    "txtorcon",
    "watchdog",
    "zxcvbn",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: MacOS X",
    "Environment :: Win32 (MS Windows)",
    "Environment :: X11 Applications",
    "Environment :: X11 Applications :: Gnome",
    "Environment :: X11 Applications :: GTK",
    "Environment :: X11 Applications :: KDE",
    "Environment :: X11 Applications :: Qt",
    "Intended Audience :: End Users/Desktop",
    "License :: DFSG approved",
    "License :: OSI Approved",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Natural Language :: English",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: Microsoft :: Windows :: Windows 10",
    "Operating System :: Microsoft :: Windows :: Windows 11",
    "Operating System :: POSIX",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Communications :: File Sharing",
    "Topic :: Desktop Environment",
    "Topic :: Internet",
    "Topic :: Security",
    "Topic :: Security :: Cryptography",
    "Topic :: System :: Archiving :: Mirroring",
    "Topic :: System :: Recovery Tools",
    "Topic :: Utilities",
]

[project.optional-dependencies]
pyqt6 = ["PyQt6", "PyQt6-Charts"]
pyside6 = ["PySide6"]

[project.urls]
homepage = "http://gridsync.io"
repository = "https://github.com/gridsync/gridsync.git"
changelog = "https://github.com/gridsync/gridsync/blob/main/CHANGELOG.md"

[project.scripts]
gridsync = "gridsync.cli:main"

[build-system]
requires = ["setuptools>=45", "versioningit"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["gridsync", "gridsync.gui"]

[tool.setuptools.package-data]
gridsync = ["resources/*", "resources/providers/*"]

[tool.versioningit.format]
distance = "{base_version}+{distance}.{rev}"
dirty = "{base_version}.dirty"
distance-dirty = "{base_version}+{distance}.{rev}.dirty"


[tool.black]
line-length = 79

[tool.isort]
profile = "black"
line_length = 79
multi_line_output = 3

[tool.mypy]
disallow_untyped_defs = true
disallow_any_explicit = true
ignore_missing_imports = true
warn_unused_ignores = true
show_column_numbers = true
pretty = true
show_error_codes = true


[tool.ruff]
target-version = "py310"
line-length = 79

[tool.ruff.lint]
select = [
    "C90",  # mccabe
    "E",    # pycodestyle error
    "F",    # Pyflakes
    "W",    # pycodestyle warning
]
ignore = [
    "E501",  # Line too long
]

[tool.ruff.lint.per-file-ignores]
"gridsync/core.py" = ["E402"]  # Module level import not at top of file

[tool.ruff.lint.mccabe]
max-complexity = 10


[tool.pylint.messages_control]
disable = [
    "consider-using-f-string",
    "duplicate-code",
    "fixme",
    "import-outside-toplevel",
    "invalid-name",
    "missing-docstring",
    "no-name-in-module",
    "no-member",
    "protected-access",
    "too-few-public-methods",
    "too-many-branches",
    "too-many-instance-attributes",
    "too-many-locals",
    "too-many-positional-arguments",
    "too-many-public-methods",
    "too-many-statements",
    "unbalanced-tuple-unpacking",
    "unnecessary-lambda",
    "wrong-import-position",
]

[tool.pytest.ini_options]
testpaths = [
    "tests",
]
addopts = "-rs -s -m \"not slow\" --ignore=tests/integration --cov-append --cov-report=html --cov=gridsync"

# Configure pytest to ignore ResourceWarning as a work-around for
# https://github.com/gridsync/gridsync/issues/479 /
# https://github.com/python/cpython/issues/91351
#
# https://docs.pytest.org/en/stable/how-to/capture-warnings.html
filterwarnings = [
    "ignore::ResourceWarning",
]
