name: CI

on: [push, pull_request]

jobs:
  NixOS:
    # Disabled because mach-nix/pypi-deps-db is currently missing the
    # latest version of Magic-Folder (23.3.1) required by Gridsync.
    # https://github.com/gridsync/gridsync/actions/runs/4475890791/jobs/7865723140#step:4:112
    if: ${{ false }}
    runs-on: "ubuntu-latest"
    container:
      image: "nixos/nix:2.10.3"
      # Run the container privileged because `nix develop` wants to use
      # unshare (I'm not sure why, maybe because we use buildFHSUserEnv).
      options: "--privileged"
      env:
        # Let us use features marked "experimental".  For example, most/all of
        # the `nix <subcommand>` forms.  And also flakes.
        NIX_CONFIG: "experimental-features = nix-command flakes"
    steps:
    - name: "Checkout"
      uses: "actions/checkout@v1"
      with:
        fetch-depth: 0
        # Checkout head of the branch of the PR, or the exact revision
        # specified for non-PR builds.
        ref: "${{ github.event.pull_request.head.sha || github.sha }}"

    - name: "Check"
      run: |
        nix flake check
    - name: "Lint"
      run: |
        nix run .#tox -- -e lint
    - name: "Unit Tests"
      run: |
        nix run .#tox -- -e py39
    - name: "Integration Tests"
      run: |
        nix run .#tox -- -e integration

  Linux:
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04]
        qt: [pyqt5, pyqt6]
    runs-on: ${{ matrix.os }}
    env:
      QT_API: ${{ matrix.qt }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        # Checkout head of the branch of the PR, or the exact revision
        # specified for non-PR builds.
        ref: "${{ github.event.pull_request.head.sha || github.sha }}"
    - name: Restore pyenv cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo
          ~/.pyenv
        key: pyenv--${{ matrix.os }}-${{ matrix.qt }}-${{ hashFiles('scripts/provision_*') }}
        restore-keys: pyenv--${{ matrix.os }}-${{ matrix.qt }}-
    - name: Restore pip cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache/pip
        key: pip-${{ matrix.os }}-${{ matrix.qt }}-${{ hashFiles('requirements/*.txt') }}
        restore-keys: pip-${{ matrix.os }}-${{ matrix.qt }}-
    - name: Install dependencies
      run: |
        sudo apt-get install -y podman
        SKIP_DOCKER_INSTALL=1 scripts/provision_devtools.sh
    - name: Test
      run: |
        source ~/.bash_profile
        make test
    - name: Build
      run: |
        source ~/.bash_profile
        make all
    - name: Verify
      run: |
        xvfb-run -a dist/Gridsync/Gridsync-tahoe --version-and-path
        xvfb-run -a dist/Gridsync/Gridsync-magic-folder --version
        xvfb-run -a dist/Gridsync/gridsync --version
        xvfb-run -a dist/Gridsync.AppImage --version
    - name: Test determinism
      run: |
        source ~/.bash_profile
        make test-determinism
    - name: Build (in container)
      run: |
        source ~/.bash_profile
        make clean in-container
        sudo chown -R runner ~
    - name: Verify (on host)
      run: |
        xvfb-run -a dist/Gridsync.AppImage --version
    - name: Test integration
      run: |
        source ~/.bash_profile
        make test-integration
    - name: sha256sum
      run: python3 scripts/sha256sum.py dist/*.*
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        path: dist/Gridsync.AppImage
        name: Gridsync-${{ matrix.os }}-${{ matrix.qt }}.AppImage
  macOS:
    strategy:
      matrix:
        os: [macos-11, macos-12]
        qt: [pyqt5, pyqt6]
    runs-on: ${{ matrix.os }}
    env:
      QT_API: ${{ matrix.qt }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        # Checkout head of the branch of the PR, or the exact revision
        # specified for non-PR builds.
        ref: "${{ github.event.pull_request.head.sha || github.sha }}"
    - name: Restore pyenv cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo
          ~/.pyenv
        key: pyenv--${{ matrix.os }}-${{ matrix.qt }}-${{ hashFiles('scripts/provision_*') }}
        restore-keys: pyenv--${{ matrix.os }}-${{ matrix.qt }}-
    - name: Restore pip cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache/pip
        key: pip-${{ matrix.os }}-${{ matrix.qt }}-${{ hashFiles('requirements/*.txt') }}
        restore-keys: pip-${{ matrix.os }}-${{ matrix.qt }}-
    - name: Install dependencies
      run: |
        sudo rm -rf /Applications/Python*
        scripts/provision_devtools.sh
    - name: Test
      run: |
        source ~/.bashrc
        make test
    - name: Make pyinstaller
      run: |
        source ~/.bashrc
        make pyinstaller
        make zip
    - name: Verify
      run: |
        dist/Gridsync.app/Contents/MacOS/Gridsync-tahoe --version-and-path
        dist/Gridsync.app/Contents/MacOS/Gridsync-magic-folder --version
        dist/Gridsync.app/Contents/MacOS/Gridsync --version
    - name: Test integration
      run: |
        source ~/.bashrc
        make test-integration
    - name: Test determinism
      run: |
        source ~/.bashrc
        make test-determinism
    - name: Make dmg
      run: |
        source ~/.bashrc
        make dmg
    - name: sha256sum
      run: python3 scripts/sha256sum.py dist/*.*
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        path: dist/Gridsync.dmg
        name: Gridsync-${{ matrix.os }}-${{ matrix.qt }}.dmg
  Windows:
    strategy:
      matrix:
        os: [windows-2019, windows-2022]
        qt: [pyqt5, pyqt6]
    runs-on: ${{ matrix.os }}
    env:
      QT_API: ${{ matrix.qt }}
      # Tahoe-LAFS 1.18.0 does not support Python 3.11
      PY_PYTHON: "3.10"
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        # Checkout head of the branch of the PR, or the exact revision
        # specified for non-PR builds.
        ref: "${{ github.event.pull_request.head.sha || github.sha }}"
    - name: Restore pip cache
      uses: actions/cache@v2
      with:
        path: c:\users\runneradmin\appdata\local\pip\cache
        key: pip-${{ matrix.os }}-${{ matrix.qt }}-${{ hashFiles('requirements/*.txt') }}
        restore-keys: pip-${{ matrix.os }}-${{ matrix.qt }}-
    - name: Install dependencies
      run: py -m pip install --upgrade setuptools pip tox diffoscope windows-curses
    - name: Test
      run: .\make.bat test
    - name: Make pyinstaller
      run: |
        .\make.bat pyinstaller
        .\make.bat zip
    - name: Verify
      run: |
        .\dist\Gridsync\Gridsync-tahoe.exe --version-and-path
        .\dist\Gridsync\Gridsync-magic-folder.exe --version
        .\dist\Gridsync\Gridsync.exe --version
    - name: Test integration
      run: |
        .\make.bat test-integration
    - name: Test determinism
      run: |
        .\make.bat test-determinism
    - name: Upload zipfiles
      uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: zipfiles.zip
        path: .\dist\*.zip
    - name: Make installer
      run: |
        .\make.bat installer
    - name: sha256sum
      run: python3 scripts/sha256sum.py .\dist\*.*
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        path: .\dist\Gridsync-setup.exe
        name: Gridsync-${{ matrix.os }}-${{ matrix.qt }}-setup.exe
